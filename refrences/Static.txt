for Testing Batch 07/02/2024  

//Static topic

//Declaration
public class Account{

	private int accno;        //instance data member , non-static data member , object level info
	private float balance;    //instance data member , non-static data member , object level info


	private static double int_rate;     //static data member , class level info 
}
-------------------------------------------------------------------------------------------------------
Note:-In construtor we should not initialized static data members.
Note:-Constructor main purpose is to initilized instance data members

 
public class Account{

	private int accno;        //instance data member , non-static data member , object level info
	private float balance;    //instance data member , non-static data member , object level info


	private static double int_rate;     //static data member , class level info 

	//static block -used to initialized static data member
	static{
	      int_rate=4.5;
	      }
	
	//default cons
	public Account()
	{
	
	}

	//para cons
	public Account(int a , float b)
	{
		this.accno=a;
		this.balance=b;
		//this.int_rate=i; //The static field Account.int_rate should be accessed in a static block
		// or we shoulc always initialized in static block
	}

}
------------------------------------------------------------------------------------------------------
Question:-When should static member gets initialized
Ans:-Constructor is used for initializing instance data members or static member get initialized before 1st object is created.


	//static block -used to initialized static data member
	static{         				//static block get initilized only static data members
	      int_rate=4.5;               		//non-static data member gets initilized within constructor
	      //accno=1;  //Cannot make a static reference to the non-static field accno
	      }						//static block gets called only once.
							//but constrctor may get called for every object creation.	

-------------------------------------------------------------------------------------------------------
Question:-When static block get executed
Ans:-Static block gets executed when Class is loaded in memory. or class will get loaded in memory when 1st object is created.
Class will not be reloading for subsequent object creation. 
Class is already available in memory , beacuse class is a template,referring always differnt object.

-------------------------------------------------------------------------------------------------------
Question:-How many objects are created - 2
	  How many times constructor gets called - 2
	  How many times static block gets called - only once      and when gets called - before class loaded in memory

ex:-At morning we shared a meeting link to separate for everyone or says that join the meeting or meeting is not started.
but its not a good approach. the meeting link share in group and says msg that start the meeting , everybody refers that link.

	So, our static block is like that , Static is something or static data member is something to store data which is going to be common for all objects of same class.
	Every static member gets initialized ,before 1st object is created or that can be done using static block  which gets called or executed when class is loaded in memory before creating any 1st object of that class.

-------------------------------------------------------------------------------------------------------
Question:-is good approach to declare static member gets initialized at time of declaration.



Note:-static - that is always associate with class.
      Object - that is always associate with constructor.   
 	  
	  























Getter setter methods used in java
If we use private data members in our class then we used this getter and setter methods , 
without defining any constructor we use this intance members.

Array revise
Assignments


Conditional and loops pdf share and some basic programs videos.



